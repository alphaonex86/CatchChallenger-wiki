The server need be able to be splited and work as cluster, or work as one and unique server standalone.

As well, each step need user input like:
# Login/pass (Login server), with Character selection grouped by group of world (group of game server). Where the same character can evolve into a world and switch to another world (with same inventory, ...) (Characters server)
# Game server selection, where the world can be the same but is mostly different to change the user experience (Game server)

As well, if the point 2 is useless (only one Character or/and Game server), the selection is skipped, and the RTT is dropped.

[[File:Server-organisation.png]]

To be more clear for the network, when the server is grouped, only one port is open. If you have the unique server for Login server, Characters server, Game server only one port is open. It's more easy to administrate. And skip inter-server communication and list of performance.

The game server connect to Login server (register on it). A unique key and login server id is passed to swith to the Game server. '''One server is a master''', game and login server is connected on it. It allow communication and lock the character played to prevent double usage.

= Login server switch =
== Reconnect ==
[[File:Reconnect_mode.png|thumb|50px]]
The client will disconnect to the login server and connect on game server
* Advantage: More performance due client connect directly on game server (no multiple RTT, no routing and filter overhead). No connexion limit (C10k, C10M)
* Disavantage: Don't keep the game server ip/location unknow, directly filter the DDOS attack (can do an overhead).
== Proxy ==
[[File:Proxy_mode.png|thumb|50px]]
The client will keep the connexion to login server and the login server will connect on game server
* Advantage: Keep the game server ip/location unknow, can act as cache for datapack (prefer CDN), filter the DDOS attack
* Disavantage: Less performance due relay mode (multiple RTT, routing and filter overhead). Force the login server to be connected on game server then can host maximum 10000 connexion.
= Gateway =
[[File:Gateway.png|thumb|150px]]
The gateway is here to adapt two unconnected network like normal internet to crypted internet (TOR, i2p, ...).

You can to cascade the gateway and network: Internet -> TOR -> I2P -> Gnutella -> Other ....

Why exists? Why use it?
* The datapack can be downloaded via the tcp communication pipe or http mirror, this unify the output
* Don't use bandwidth of the sub net: some sub net like i2p can have very limited bandwidth, that's boost the speed
* Autodetect change: I you cache http traffic, you can have some slow down or error. With the integrity control into the protocol, the change is directly detected and the corresponding file downloaded.
* The gateways will jump by reconnect to the game server, see above: Login server switch mode reconnect
* Able to change and offload the encryption and compression

The limit?
* This as MiM intercept the traffic (needed to change the datapack traffic to download from the gateway), you need have trust into the gateway. The couple login + password can't be intercepted, but the traffic can be modified.
