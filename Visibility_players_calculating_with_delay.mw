= Introduction =
This can applied to all similar 2D tile game. Is very useful for the performance.
= Algorithm =
The player list of visibility is calculated as delayed of the move, instant for the insert/remove. To not reload all the distance list, keep all the list.

For the local player only ('''all relative to the current player'''):
* Need get players (multiple) into group identified by distance
* Need get distance for a player, '''relative to the current player'''
* Visible player list:
 while(list size < 50)
 add to visible list group by group, but to keep lower than 50
== Move calculation ==
 Calculate all new distances into distance group
 Look which group will be displayed
 if(into distance group displayed is not into the visible list)
   insert into the visible list && send insert order
 if(into distance group not displayed is into the visible list)
   remove into the visible list && send remove order
== Remove ==
 if(into visible list)
    Then send remove to player && remove from visible player list;
 Remove from player list && group id for the player
== Insert ==
 Calculate the distance
 Insert into list to get the group id by player
 Insert into players list by group id
 if(current group is into the visibility list)
   insert the current player into the visibility list
   if(now the group is too bigger to be displayed)
     remove the group from visibility list
   else
     send the new insert to the player
