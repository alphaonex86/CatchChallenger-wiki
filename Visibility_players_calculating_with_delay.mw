= Introduction =
This can applied to all similar 2D tile game. Is very useful for the performance because it group some calculating and it limit the displayed players.
= Algorithm =
The player list of visibility is calculated as delayed of the move, instant for the insert/remove. To not reload all the distance list, keep all the list. Ignore very far player, and no store it.

The visibility distance is limited by maximum_distance_visibility and the number of player displayed.

For the local player only ('''all relative to the current player'''):
* Visible player list (player pointer + distance):
 while(list size < 50)
   add to visible list group by group, but to keep lower than 50
== Move calculation ==
Call at frequency of 5s.
 Calculate all new distances (group by distances), temporary list keep all lower than maximum_distance_visibility
 Do the new Visible player list
 if (one entry is not into the previous list)
   send insert order
 if (one entry is not into the new list)
   send remove order

== Remove ==
 if(into visible list)
    Then send remove to player && remove from visible player list;
== Insert ==
 Calculate the distance
 if(visible player list size() +1 > 50 item)
 {
   remove the more far group and send remove order
   if(distance = more far group)
     return;
 }
 Insert into visible player list && send insert order
