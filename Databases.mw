= Access =
What server kind need what database:
* Login server need: login (read in all case, if account automatic creation then read/write), common (all)
* Master server need: login (read if account automatic creation), base, common (all, read)
* Game server need: base (read), common (spec), server

= Requirements =
With the actual database structure (version 2, commit: 085281a66ce52232782a0f56e2339fa7070a350c), the requirements are:
* Search by primary key
* Search by index on single colomn
* Search by index on multiple colomn
* Able to store int, string, blobs
Preferred:
* Able to work without primary key
* Able to store 8Bits and 16Bits int, string: fixed and variables size
Not required:
* Transactions (commit, rollback)
* Relational (Join, ...)
* Consistency (The master server lock the globale data linked to the account util the last write is done, then consistency done by the master server)

= blob format =
== catchchallenger_common ==
=== character ===
==== allow ====
List of allow uint8_t resolved by dictionary:
* 01
==== item ====
List of:
* uint16_t item
* uint32_t quantity
==== item_warehouse ====
List of:
* uint16_t item
* uint32_t quantity
==== recipes ====
List of:
* uint8_t recipe
==== reputations ====
List of:
* uint8_t type
* '''int32_t''' point
* '''int8_t''' level
==== encyclopedia_monster ====
* uint16_t offset from the previous monster id, if not previous then from 1 (if you have the monster 1 then is 0)
==== encyclopedia_item ====
* uint16_t offset from the previous monster id, if not previous then from 1 (if you have the item 1 then is 0)
==== achievements ====
* uint8_t offset from the previous monster id, if not previous then from 1 (if you have the achievement 1 then is 0)
